name: CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [8.2]
    services:
      php:
        image: php:${{ matrix.php-version }}
        ports:
          - 80:80
          - 5173:5173
        env:
          APP_PORT: 80
          VITE_PORT: 5173

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php-version }}'

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Copy .env
        run: cp .env.ci .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run PHPUnit tests
        run: ./vendor/bin/phpunit

#  deploy:
#    runs-on: ubuntu-latest
#    needs: test
#    if: ${{ needs.test.result == 'success' }}
#    env:
#      SSH_HOST: ${{ secrets.SSH_HOST }}
#      SSH_KEY: ${{ secrets.SSH_KEY }}
#      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
#      EMAIL_TO: yowelikachala@gmail.com
#      SMTP_SERVER: smtp.gmail.com
#      SMTP_PORT: 587
#      SMTP_USERNAME: not-here
#      SMTP_PASSWORD: not-here-either
#    steps:
#      - name: Deploy to Server
#        uses: appleboy/ssh-action@v0.1.7
#        with:
#          host: ${{ env.SSH_HOST }}
#          key: ${{ env.SSH_KEY }}
#          username: ${{ env.SSH_USERNAME }}
#          script: |
#            cd /var/www/YowFitWeb
#            git remote update
#            git pull origin main
#            composer install --optimize-autoloader
#            npm install --production
#            npm run build
#            php artisan migrate
#
#      - name: Send Deployment Status Email
#        if: always()
#        uses: dawidd6/action-send-mail@v2
#        with:
#          server_address: ${{ env.SMTP_SERVER }}
#          server_port: ${{ env.SMTP_PORT }}
#          username: ${{ env.SMTP_USERNAME }}
#          password: ${{ env.SMTP_PASSWORD }}
#          subject: 'CI/CD Deployment Status'
#          to: ${{ env.EMAIL_TO }}
#          from: 'yowelikachala@gmail.com'
#          body: 'Deployment successful!'
